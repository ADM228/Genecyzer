name: CI

on: [push, pull_request]

defaults:
  run:
    shell: bash

jobs:
  build:
    name: ${{ matrix.platform.name }}
    runs-on: ${{ matrix.platform.os }}

    strategy:
      fail-fast: false
      matrix:
        platform:
        - { name: Windows VS2019, os: windows-2019  }
        - { name: Windows VS2022, os: windows-2022  }
        # - { name: Windows MinGW,  os: windows-2022, flags: -GNinja -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++ }
        - { name: Linux GCC   (Manual SFML compilation),
            os: ubuntu-latest,
            packages: libxrandr-dev libxcursor-dev libudev-dev libopenal-dev libflac-dev libvorbis-dev libgl1-mesa-dev libegl1-mesa-dev libfreetype-dev }
        - { name: Linux Clang (Manual SFML compilation),
            os: ubuntu-latest,
            packages: libxrandr-dev libxcursor-dev libudev-dev libopenal-dev libflac-dev libvorbis-dev libgl1-mesa-dev libegl1-mesa-dev libfreetype-dev,
            flags: -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ }
        - { name: Linux GCC   (Packaged SFML),
              os: ubuntu-latest,
              packages: libsfml-dev }
        - { name: Linux Clang (Packaged SFML),
              os: ubuntu-latest,
              packages: libsfml-dev,
              flags: -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ }
        - { name: MacOS,          os: macos-latest  }

    steps:
    # - name: Install Windows Dependencies
    #   if: runner.os == 'Windows'
    #   run: choco install ninja

    - name: Install Linux Dependencies
      if: runner.os == 'Linux'
      run: sudo apt update && sudo apt install ${{matrix.platform.packages}}

    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure
      run: cmake -S . -B build -DCMAKE_INSTALL_PREFIX=install ${{matrix.platform.flags}} -DBUILD_SHARED_LIBS=FALSE

    - name: Build
      run: cmake --build build --target Genecyzer --config Release

    # - name: Install
    #   shell: bash
    #   run: cmake --install build --config Release
